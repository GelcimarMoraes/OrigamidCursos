/*

O flexbox foi criado para facilitar o posicionamento de componentes,
principalmente quando você não sabe a largura e a altura do mesmo.

Tudo começa com o display: flex; no elemento pai.
A interação é baseada na relação entre o elemento pais e os filhos.

Sendo o pai um container e os filhos items do container.

*/

/* CONTAINER */

/* O display flex no container, fará 
com que os filhos diretos se comportem como elementos flex */
.container {
	display: flex;
}

/* Define a direção dos itens filho */
.container {
	flex-direction: row | row-reverse | column | column-reverse;
}

/* Define se a linha quebra ou não */
.container{
  flex-wrap: nowrap | wrap | wrap-reverse;
}

/* Define a distribuição horizontal do conteúdo */
.container{
  justify-content: flex-start | flex-end | center | space-between | space-around;
}

/* Define o alinhamento dos itens */
.container {
  align-items: flex-start | flex-end | center | baseline | stretch;
}

/* Define a distribuição vertical do conteúdo */
.container {
  align-content: flex-start | flex-end | center | space-between | space-around | stretch;
}

/* ITEMS */

/* Define a ordem do item */
.item {
  order: 1;
}

/* Define a proporção do item */
.item {
  flex-grow: 1; /* 0 é o padrão */
}

/* Define a capacidade de encolher do item */
.item {
  flex-shrink: 1; /* 1 é o padrão */
}

/* Define um valor base para o item */
.item {
  flex-basis: 200px | auto; /* default auto */
}

/* Atalhos para os itens acima */
.item {
  flex: none | [ <'flex-grow'> <'flex-shrink'>? || <'flex-basis'> ]
}

/* Define o alinhamento do item */
.item {
  align-self: auto | flex-start | flex-end | center | baseline | stretch;
}